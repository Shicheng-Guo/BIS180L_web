fit <- kmeans(GxE_counts, 9)
autoplot(fit, data = GxE_counts, label = TRUE)
?autoplot
autoplot
fit <- kmeans(GxE_counts, 9)
str(fit)
plot(fit$centers)
clus <- as.data.frame(fit$cluster)
head(clus)
head(scores)
scores <- as.data.frame(prcomp_counts$rotation)
head(scores)
head(clus)
ploting <- merge(clus, scores, by.x = rownames(clus), by.y = rownames(scores))
ploting <- merge(clus, scores, by = row.names)
str(scores)
str(clus)
names(clus) <- paste("clus")
head(clus)
ploting <- merge(clus, scores, by = row.names)
clus
ggplot(data = scores, aes(x = PC1, y = PC2, label = rownames(scores))) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "red", alpha = 0.8, size = 4)
scores <- as.data.frame(prcomp_counts$rotation)[,c(1,2)]
head(scores)
rownames(scores)
rownames(clus)
ploting <- merge(clus, scores, by = row.names)
str(clus)
str(scores)
ploting <- merge(clus, scores)
ploting
ploting <- merge(clus, scores, by = 0)
ploting
ploting <- merge(clus, scores, by = "row.names")
ploting
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "red", alpha = 0.8, size = 4)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "red", alpha = 0.8, size = 4)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "red", alpha = 0.8, size = 4)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = clus, alpha = 0.8, size = 4)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4)
# plot of observations
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(fill = clus, alpha = 0.8, size = 4)
fit <- kmeans(GxE_counts, 9)
autoplot(fit, data = GxE_counts, label = TRUE)
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4) +
scale_colour_brewer(palette="Set1")
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, color)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4) +
scale_colour_brewer(palette="Set1")
clus
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4) +
scale_colour_brewer(palette="Set1")
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = ploting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4) +
scale_colour_brewer()
plotting <- merge(clus, scores, by = "row.names")
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(aes(fill = clus),alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(aes(color = clus),alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(,alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(,alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(,alpha = 0.8, size = 4) +
scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(,alpha = 0.8, size = 4)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4)
geom_text(alpha = 0.8, size = 4) +
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4) +
scale_colour_manual(values = clus, limits = c("4", "6", "8", "10"))
ggplot(data = plotting, aes(x = PC1, y = PC2)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4, color = clus) +
scale_colour_manual(values = clus, limits = c("4", "6", "8", "10"))
ggplot(data = plotting, aes(x = PC1, y = PC2)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4, color = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4, color = clus)
d <- qplot(PC1, PC2, data=plotting, colour=clus)
d
d + scale_colour_brewer()
ggplot(data = plotting, aes(x = PC1, y = PC1, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, color = clus)
ggplot(data = plotting, aes(x = PC1, y = PC1, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4, color = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(alpha = 0.8, size = 4, color = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, color = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, fill = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, fill = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, fill = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, fill = clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, fill = clus) +
scale_colour_manual(values = clus, limits = c("1", "2", "3", "4", "5", "6", "7", "8", "9"))
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, aes(fill = clus), stat = "identity")
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +#
  geom_hline(yintercept = 0, colour = "gray65") +#
  geom_vline(xintercept = 0, colour = "gray65") +#
  geom_point(alpha = 0.8, size = 4, aes(color = clus), stat = "identity")
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, stat = "identity")
str(plotting)
plotting$clus <- as.factor(plotting$clus)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = clus)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, stat = "identity")
library(ggplot2)
prcomp_counts <- prcomp(t(GxE_counts))
scores <- as.data.frame(prcomp_counts$rotation)[,c(1,2)]
set.seed(25) #make this repeatable as kmeans has random starting positions
fit <- kmeans(GxE_counts, 9)
clus <- as.data.frame(fit$cluster)
plotting <- merge(clus, scores, by = "row.names")
plotting$clus <- as.factor(plotting$clus)
head(plotting)
names(clus) <- paste("cluster")
plotting <- merge(clus, scores, by = "row.names")
head(plotting)
plotting$cluster <- as.factor(plotting$cluster)
plotting$cluster <- as.factor(plotting$cluster)
names(clus) <- paste("cluster")
plotting <- merge(clus, scores, by = "row.names")
plotting$cluster <- as.factor(plotting$cluster)
ggplot(data = plotting, aes(x = PC1, y = PC2, label = Row.names, color = cluster)) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_point(alpha = 0.8, size = 4, stat = "identity")
setwd("~/git.repos/BIS180L_web/") #Julin
library(knitr)
jekyll.knit <- function(input) {#
    rel.path = substr(input, 6, nchar(input) - 4)#
    output = paste("_posts/", rel.path, ".md", sep = "")#
    knit(input = input, output = output)#
    system(paste("perl -pi -e 's|images/|{{ site.baseurl }}/images/|gi'", output, sep = " ")) # for non-R generated figures#
    system(paste("perl -pi -e 's|figure/|{{ site.baseurl }}/figure/|gi'", output, sep = " ")) # for R figures generated during knitting#
}
jekyll.knit("_rmd/2015-05-19-genetic-networks-1.Rmd")
jekyll.knit("_rmd/2015-05-19-genetic-networks-1.Rmd")
install.packages("pvclust")
library(pvclust)
?clusGap
install.packages("cluster")
library(cluster)
set.seed(125)
gap <- clusGap(GxE_counts, FUN = kmeans, iter.max = 30, K.max = 23, B = 500, verbose=interactive())
set.seed(125)
gap <- clusGap(GxE_counts, FUN = kmeans, iter.max = 30, K.max = 23, B = 50, verbose=interactive())
plot(gap, main = "Gap Statistic")
with(gap, maxSE(Tab[,"gap"], Tab[,"SE.sim"], method="globalmax"))
gap <- clusGap(GxE_counts, FUN = kmeans, iter.max = 30, K.max = 23, B = 50, verbose=interactive())
plot(gap, main = "Gap Statistic")
with(gap, maxSE(Tab[,"gap"], Tab[,"SE.sim"], method="globalmax"))
gap <- clusGap(GxE_counts, FUN = kmeans, iter.max = 30, K.max = 15, B = 50, verbose=interactive())
plot(gap, main = "Gap Statistic")
with(gap, maxSE(Tab[,"gap"], Tab[,"SE.sim"], method="globalmax"))
?maxSE
gap <- clusGap(GxE_counts, FUN = kmeans, iter.max = 30, K.max = 20, B = 50, verbose=interactive())
plot(gap, main = "Gap Statistic")
with(gap, maxSE(Tab[,"gap"], Tab[,"SE.sim"], method="firstSEmax"))
