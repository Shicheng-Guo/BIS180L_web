How to turn in Assignments (and other miscellany)
========================================================
author: Julin Maloof
date: April 11, 2019


Stop your AWS Instance when not in use!!!
===================
Some people are using their credit at an alarming rate.  I think this means that you are not stopping your instance.
If your name is below then you may be forgetting to turn off your instance.

Also, there is a $3.00 monthly charge for each EBS (virtual hard drive) that you create.  So if you created multiple instances that may explain the high charges.

| Account       | Usage  |
|:--------------|:-------|
| hspourcyrous@ | $11.29 |
| cwpittman@    | $7.4   |
| ccrcheng@     | $6.05  |
| adsriram@     | $5.65  |
| kknahal@      | $5.36  |
| rabednorz@    | $5.14  |
| jwaskowiak@   | $5.04  |

Stop your AWS Instance when not in use!!!
===================
One __gotcha__ is that AWS Educate logs you out of the AWS console after 3 hours, but class is 4 hours long.

If AWS Educate may log's you out of the console, your request to stop your instance will not be submitted and you will have to log in again and resubmit your stop request.

If you see this, you should be fine:
![](slide_images/Stopping_Instance.png)

Or you can wait 30 seconds and be sure your instance is stopped if you see this:
![](slide_images/Stopped_Instance.png)


Tiger VNC on your computer
===========================
There may have been a misunderstanding regarding ease of access to AWS from your personal computer.

It is easy.  Just download TigerVNC (free) to your computer.  See the first lab AWS for download links.


I need your GitHub Username
========================================================

As of 8AM I am *STILL* missing usernames for:

Stevie Benko  
Alvin Chen  
Chris Cheng  
Devon Fitzpatrick  
Marcus Flisher  
Jana Gagacheva  
Jonathan Kirkland  
King Law  
***
Yimei Lu  
Karenjit Nahal  
Chad Pittman  
Hanna Pourcyrous  
Krishna Pramod Kumar  
Guy Robinson  
Rebecca Ryan  
Sankalp Sinha  
Samvardhini Sridharan  
Cole Williams  


To give me your GitHub Username:
========================================================

* Fork the gh-usernames repository
* Clone it to your computer
* Modify the `gh-usernames.md` file
* Add your changes
* Commit your changes
* Push back up to GitHub
* Send me a pull request (from the web browser)

See GitHub assignment from last Thursday.  If you need help please ask.

Assignment turn-in
========================================================
incremental: true
Assignments are to be turned in by pushing to a github repository

I will create a private GitHub repository for each of you for each assignment.  

Assignment 1 and 2 are available.

Short version for Assignment 1:
* Clone the repository
* Move your file(s) into the directory
* `Git add` the file to be tracked
* `Git commit` the change
* Push to github

Step-by-step guide for assignment turn in
===================
type:section

Clone the repository--part I
=====================

* go to GitHub.com and logon
* If you haven't already done so, accept the invitation to join the UCDBIS180L-19 team
* Click on the link "UCDBIS180L-19/BIS180L_Assignments_..." link on the right hand side

![assignments](git_clone_1.png)

Clone the repository--Part II
==============================

* Click on the button to copy the "clone" link to your clipboard
![](git_clone_2.png)

Clone the repository--Part III
===============================
* Go to terminal type `git clone` and then paste in the address.  It will look something like
![terminal_clone](git_clone_3.png)

Move files into the repository
=================================

* `cd` into the repository (Change Stacey.Harmer to whatever is correct for your repo)
* move the relevant file(s) to the directory.  (This will vary depending on where your files are)

```{r,eval=FALSE}
cd BIS180L_Assignment_1_Stacey.Harmer
cd BIS180L_Assignment_1_Stacey.Harmer
mv ~/Documents/BIS180L_Lab1/* ./
```

Check status; Git to track the files
====================================

```{r, eval=FALSE}
git status
git add ./* #adds all files
git commit -m "added files for assignment 1"
```

Continue working and committing
================================

Continue to work on the assignment

And and then commit new changes whenever you change something significant

Push to GitHub
==============

When you are ready to submit push your changes to GitHub

```{r, eval=FALSE}
git push
```

Of course you can push before this also.  Just be sure to push one final time when you have completed your work.

You can go to the github.com webpage for your repository to double check that the files are there.


Future
======

For subsequent assignments (including Assignment 2) clone the repository *before* you start working on the lab.  

Do you work in the repository.

Commit and push changes as you go (serves as a backup!)

__DO NOT__ add large data files (they can be in the directory by do not ask git to track them)




