RNAseq: Differential Expression
========================================================
author: Julin Maloof
date: May 21, 2019
autosize: true
incremental: true

Goals
========================================================

Find genes that have different transcript levels:
* When comparing genotypes (IMB211, R500)
* When comparing treatments (low density (sun) and high density (shade))
* That respond differently to shade in the two genotypes.

Using RNAseq to quantify expression
========================================================

* In theory: simple.  
* Genes expressed at higher levels in the plants should generate more sequence fragments.
* Therefore we can count the number of reads mapping to a particular gene.
  - If IMB211 has more counts than R500 for a particular gene, that may indicate higher expression


Challenges
========================================================

* RNAseq count data is not normally distributed
  - Cannot use Gaussian statistics because this is count data
  - Cannot use Poisson distribution because the data is "over dispersed"
  - Use a negative binomial distribution instead
* What if you have more overall reads in one library as compared to the other?
* What if one gene is expressed so highly in one sample that it dominates the read counts?
  - Need to normalize
* Small number of replicates (~ 3 per sample), large number of tests (30,000 - 40,000)
  - use Bayesian methods to "borrow" information among genes
  - Also need multiple testing correction

Don't be tempted by RPKM
========================================================

One common method of RNAseq quantification is Reads Per Kilobase of gene length per Million base pairs sequenced.

__Don't use it__ (at least for statistical analysis)

Problems:
* 1 read in a 100bp gene and 10 reads in a 1000bp gene both have the same RPKM.  (Why is this a problem?)
* Assumes that an uniform normalization is appropriate

Outline
======================================================

* Count number of reads in each gene for each sample (RSubread)
* Normalize read counts (EdgeR)
* Determine appropriate statistical models (EdgeR)
* Find differentially expressed genes (EdgeR)
* Examine results

Additive and Interaction effects
=========================================

(On board)

Model Matrix
========================================
incremental:false
In edgeR a `model matrix` is created to describe the possible experimental effects on gene expression.  

Our additive model matrix will look like this:


```{r design, echo=FALSE}
library(tidyverse)
counts.data <- read_tsv("../data/gh_internode_counts2.tsv")
sample.description <- tibble(sample=colnames(counts.data)[-1])
sample.description <- sample.description %>%
mutate(gt=str_extract(sample,"R500|IMB211")) %>%
mutate(trt=str_extract(sample,"NDP|DP")) %>%
mutate(group=str_c(gt,trt,sep = "_"))
sample.description <- sample.description %>%
mutate(gt=factor(gt),
trt=factor(trt,levels = c("NDP","DP"))) # setting the levels in this way makes "NDP" the reference
design <- model.matrix(~gt+trt,data = sample.description)
rownames(design) <- sample.description$sample %>% str_replace(fixed("_INTERNODE.1_matched.merged.fq.bam"),"")
kable(design)
```


Model Matrix
========================================
incremental:false

The 1s and 0s specify which effects are present in each sample and are used in the statistical model:

$$
expression \sim intercept + gt + trt
$$


```{r design2, echo=FALSE}
kable(design)
```

Model Matrix
========================================
incremental:false

The 1s and 0s specify which effects are present in each sample and are used in the statistical model:

$$
expression \sim intercept + gt + trt
$$

Which is shorthand for

$$
expression \sim intercept + gtR500\_Effect*gtR500 + trtDP\_Effect*trtDP
$$

```{r design3, echo=FALSE}
kable(design)
```

Testing model terms
==================================

To test for whether a particular factor is an important determinant of a gene's expression level, we compare models with and without that term.  For example, to test if genotype is important, we would compare

__(full model)__    $expression \sim intercept + gt + trt$

to

__(reduced model)__   $expression \sim intercept + trt$


If the full model its the data significantly better than the reduced model, then we conclude that genotype is important.