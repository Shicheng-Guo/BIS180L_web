Week 4 Questions
========================================================
author: Julin Maloof
date: April 27th, 2018
autosize: true


```{r, include=FALSE}
library(tidyverse)
tomato <- read_csv("../data/Tomato.csv")
```



Is it known whether or not the tidyverse functions use less computing power than equivalent functions in Excel?
========

Not by me.  However, generally I have found that things don't scale well in Excel when you get into the hundreds of thousands of entries.  Also who wants to drag across that many rows?  (I know you can fill down...)


What is the fastest way to convert continuous data into discrete categories in a table?
======

`cut_interval()` dvidides into equally-spaced groups; `cut_number()` divides into groups with equal number of observations; `cut_width()` allows you to specify the interval width, and `cut()` allows you to specify the break points.

```{r}
tomato <- tomato %>% mutate(hyp.category = cut_interval(hyp,n=10))
tomato %>% select(hyp,hyp.category) %>% head()
```

```{r}
table(tomato$hyp.category)
```

How to make a 3 variable plots in R ? (or is it possible to make it without using a color or shape code)
=======
If you are talking about 3D plots, then see packages `scatterplot3d`, `plot3D`, `rgl`, etc

```{r}
library(plot3D)
library(plot3Drgl)
scatter3D(x=tomato$hyp,y=tomato$int2,z=tomato$petleng,xlab="hypocotyl",ylab="internode 2", zlab="petiole") # static
scatter3Drgl(x=tomato$hyp,y=tomato$int2,z=tomato$petleng,xlab="hypocotyl",ylab="internode 2", zlab="petiole") # interactive
```

Why doesn't `plant_worm_best %>% median(score)` work, instead we have to use `median(plant_worm_best$score)`?
====
Because median is designed to work on a vector of data and doesn't know how to pull that out from tibble/data frame.  You could do
```{r}
tomato  %>% summarize(hyp.median=median(hyp))
```

I am still confused what is str_sub() doing?
========
It cuts a string at the numeric positions that you specify
```{r}
"ABCDEFGHIJK" %>% str_sub(3,5) #takes the 3rd through 5th characters of the string
```


Can you go over how to do/format a boxplot command for ggplot on R?
===
x = the variable with different categories
y = the variable you want to plot
optional, fill= additional categorical variable
```{r}
tomato %>% ggplot(aes(x=species, y=int4)) + 
  geom_boxplot()
```

```{r}
tomato %>% ggplot(aes(x=species, y=int4, fill=trt)) + 
  geom_boxplot()
```

Is there a way to rename the fill label like xlab and ylab?
====
The [cookbook for R](http://www.cookbook-r.com/Graphs/)  is great for questions like this
```{r}
tomato %>% ggplot(aes(x=species, y=int4, fill=trt)) + 
  geom_boxplot() +
  scale_fill_discrete(labels=c("High R/FR", "Low R/FR"))
```

Is there a way to see a markdown preview of your R markdown document in R?
====
Click preview?  I think I don't understand the question

Are there preferred color palates to use in ggplot to ensure that color blind individuals can see the differences that are plotted using colors?
=====
See http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/

They suggest

```{r, eval=FALSE}
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

# To use for fills, add
  scale_fill_manual(values=cbPalette)

# To use for line and point colors, add
  scale_colour_manual(values=cbPalette)
```

What is the key used for when you join two tables?
=======
When you join, R needs to know which rows from the two tables should be matched.  The key determines this.

Is the common ggplot function that is commonly used in publishing papers the aes function, or is there another function that is also used?
========
Any ggplot has to use `aes()`

Some people like the add on package [cow plot](https://cran.r-project.org/web/packages/cowplot/vignettes/introduction.html) to make cleaner graphs for publication

Besides the 'NA' that are shown when we sorting E_diff smaller than -2, there are also other situations of E_diff, like '-Inf' and 'NaN', which is caused by different problem from 'NA'. Do we need to fix them when we count the number of orthologs?
=======
"NaN" will also get picked up by `is.na()` so that should be OK
"-Inf" is < -2 so that also should be OK

Why plant_worm_othorlogs and worm_plant_orthologs give the different results?
======
in plant_worm we are asking for plant genes with a single worm ortholog.

in worm_plant we are asking for worm genes with a single plant orthlog.  

These are different.  If you filtered on both E_diff columns maybe they would be the same?

What is the difference between 'join' and 'merge'?
==========
two different ways of doing the same thing.

When we use the str_sub function, it treats each element in the query_id as a character string. Since these elements are made up of numbers and letters, it makes sense that they're character strings. What if you wanted to call the function on a column that held integers or numbers? How would it treat those elements? How does R decide what data type to use (string, character, integer, etc.)?
=======
R does explicitly define data types.  When you import data the import function tries to figure out what it is.

Generally if you call a function on a data type that it can't handle you will get an error.  Other times it will convert for you, as below.

```{r}
12345 %>% str_sub(2,3)
```

You can tell that the results is a string because it is in quotes.

There are functions for testing and converting between data types

```{r}
12345 %>% str_sub(2,3) %>% is.numeric()
12345 %>% str_sub(2,3) %>% as.numeric()
```

What are the advantages of using ggplot as opposed to regular plot.
======
Nicer defaults, clear and consisitent language for plot specification, easier and faster to make the plot that you want (especially if including more than two variables).

Why did we set our E threshold for Assignment 3 to be 1e-04 for the BLAST between both organisms to each other?
=======
A 1 in 10,000 expectation seems appropriate when we are doing queries with about that many different proteins 

You can specify which columns are the same in two tables. Can you specify if two values/characters are the same? For example, what if in the first table I write "music" in column "Name", but in the second table I write "musics" in column "Name", and I want those rows to join?
====
No; you would first need to mutate one of the coumns to convert

When creating new columns, can you specify where you want the new column to be in? Can you insert it in the middle of two columns and can you move the columns after creating?
==========
Yes, if you pipe the result of `mutate` to `select` and then specify the order there.

where do you recommend going to find useful packages like ggplot and tidyverse? Is there a place where people typically upload and verify the accuracy/legitimacy of packages?
========
There is the [R Journal](https://journal.r-project.org/archive/2017-2/) and [R bloggers](https://www.r-bloggers.com) that introduce new packages.

There isn't a great verification process that I am aware of, but packages available on [CRAN](https://cran.r-project.org) or [Bioconductor](http://bioconductor.org) have gone through some checks.  

When knitting, does it still work from other computers? Specifically in reference to using files that you upload, etc...
=======
The new computer would need to have the same data files in the same (relative) location.

Is there a way to have R load certain packages by default so you don't have to reinstate them every time you start the program?
======
To be clear, you don't have to reinstall, only to reload, using `library()`

But yes, create a script and save it using the name `.Rprofile` in your home directory.  This will be sourced and run by R on startup.

How do you know if lead is taking the next value or the previous value? Is the next value the default?
======
`lead()` is defined to take the next value; `lag()` is defined to take the previous value.

Sometimes when I am trying to exit R-studio it asks me to save the environment. What does that do?
======
It saves all of the objects (varaibles) that you have created in a file called `.Rdata`.  This will then be automatically loaded when you next start R.  I recommend AGAINST doing this.

It seems like adding aesthetic qualities to graphs in R (nice title, axis labels, regression equation, formulas) can be pretty difficult and requires a lot of patience. Are there any applications that allow researchers to generate basic graphs in R and then manipulate the aesthetic features in a GUI which would probably be much easier to use?
===========
If you save as a PDF then you can open in any graphics program that can read PDFs and manipulate there.

[Affinity Designer](https://affinity.serif.com/en-us/designer/) is reasonable priced and can do this.  [Adobe Illustrator](https://www.adobe.com/products/illustrator.html) is unreasonably priced and also can do this.


I am confused by scaling in ggplot.  I am understand that is is done by the system but changes like log are possible in the function. When would we want to change the scale in ggplot compared to manipulating the data we input?
=========
Either will work, but often it is nice to leave the data on its original scale and only change the way it is displayed (i.e. by using the `scale_y_log10` function).  You should think of the ggplot scale functions as changing the graph axis, not the data.

Is there a command that allows you to reverse the information you have in a certain row of a matrix? How do you use it?
========
Think about the square brackets.  They extract in whatever order you specify.

```{r}
test <- c("A","B","C","D","E")
test[1:5]
test[5:1]
```


what other packages and or applications can create graphs? is ggplot the most useful and prominent in the industry?
=======
R has base graphics, and also packages like `lattice` but I find `ggplot` to produce nicer plots and that it is easier to code.

I see a lot of plots in publications that were made with ggplot and also in the press (i.e. NY times).

Python has nice plotting capabilities but I am less familiar with them.

[plotly](https://plot.ly) is quite popular but I haven't used it.

For a non-programing plotting application, check out [prism](https://www.graphpad.com/scientific-software/prism/)

What's the use of the `summarize()` command as explained in Tidyverse and in what ways can it be used?
=======
Compute values on groups of your data set.  I'd like to be able to make this clear in the tutorial, so if you could explain to me how it was unclear that would be great (feel free to send me an email).

The tomato data set has measurements on 5 species.  We want to summarize the hypocotyl length of each species.  The mean and standard deviation are good summaries, so we compute them:

```{r}
tomato %>% group_by(species) %>% summarize(hyp.mean=mean(hyp), hyp.sd=sd(hyp))
```


I'm still not too sure how you could still have an E-value of 0 with a very low percent identity.
==========
Keep exploring the data

I don't have a question 
========
I guess I am doing a good job for at least one student







